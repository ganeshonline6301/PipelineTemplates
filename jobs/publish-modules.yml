parameters:
  - name: bicepFilePath
    displayName: BicepFilePath
    type: string
  - name: serviceConnection
    displayName: ServiceConnection
    type: string
  - name: containerRegistry
    displayName: ContainerRegistry
    type: string
  - name: moduleName
    displayName: ModuleName
    type: string
  

steps:

- task: AzureCLI@2
  displayName: 'Check and Publish ${{ parameters.ModuleName }} module'
  inputs: 
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    inlineScript: |  
      $acrName = "${{ parameters.containerRegistry }}"
      $moduleName = "${{ parameters.ModuleName }}"
      
      Write-Host "Checking if $moduleName exists in ACR..."
      $moduleExists = az acr repository show-tags --name $acrName --repository bicep/$moduleName --query "[?contains(@, 'v1')]" | ConvertFrom-Json

      if ($moduleExists.Count -eq 0) {
        Write-Host "$moduleName not found, publishing..."
        az acr login --name $acrName
        az bicep publish --file ${{ parameters.BicepFilePath }} --target br:${{ parameters.ContainerRegistry }}.azurecr.io/bicep/${{ parameters.ModuleName }}:v1
      } else {
        Write-Host "$moduleName already exists, skipping publish."
      }